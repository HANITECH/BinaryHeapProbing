{"name":"Binaryheapprobing","tagline":"A program to build a Binary Heap from initial collections of items. Complexity Analysis are provided ","body":"ReadMe.txt\r\n\r\n                                         \r\n                                       Mutable Priority Queue\r\n\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t   \r\nDescription:\r\n----------- \r\nThis program will build a Binary Heap from an initial collections of items using a file with a complete path or directly from user entries \r\nusing command line window.While building the Binary Heap - Using insert()-, the program will save each node location into\r\na hash table -a quadratic linear probing is used for hashing nodes locations.\r\nThe Hash Table is updated on every insertion , deletion , increasekey ,and  decreasekey operations.\r\n\r\nTime Complexity Analysis:\r\n-----------------------\r\nBuilding the Heap :insertion for one item is O(1) on average and O(log N) for worst case.For N items, O(N) in average and O(N log N) for worst case.\r\nFinding a Node   : Because we use a hash table to store nodes locations, it will take a constant time O(1) to find one node,making the operation cheap.\r\n                   As a result, other operations that use findlocation() will be cheap as well.\r\n\r\n \r\nImportant Functions :\r\n-------------------\r\n******************PUBLIC OPERATIONS*********************\r\n void insert( x )                    --> Insert x ( a node ) into the heap\r\n deleteMin( minItem )                --> Remove (and optionally return) smallest item\r\n Comparable findMin( )               --> Return smallest item\r\n bool isEmpty( )                     --> Return true if empty; else false\r\n void makeEmpty( )                   --> Remove all items \r\n void increaseKey(delta,key)         --> Increases delta value then percolate down \r\n void decreaseKey(delta,key)         --> Decreases delta value then percolate up\r\n void removeKey(key)                 --> Assigning a minimum key value, Percolate up till root then delete\r\n\r\nFiles Included :\r\n---------------\r\n1- main.cpp\r\n2- BinaryHeap.h\r\n3- QuadraticProbing.h\r\n4- QuadraticProbing.cpp\r\n5- CMakeLists.txt\r\n7- ReadMe.txt\r\n\r\nLanguage Used: c++ \r\n------------- \r\n \r\n \r\nCompiling Instructions:\r\n----------------------\r\n                      \t#cmake CMakeLists.txt\r\n\t\t\t            make\r\nRunning Instructions: \r\n--------------------- \r\nFrom a file containing data: Redirect the input file  as follows  ./335_4 < input.txt\r\nFrom command line window   : after make file is run, input all the data needed to build the binary heap then type \"end\" and press enter key.\r\n                             to remove some data; type the all the data needed to be removed then type \" end \" and press enter key.\r\n\t\t\t\t\t\t   \r\nKnown Bugs:\r\n----------   None; please let us know if you find any issues. \r\nContacts:\r\n--------\r\nHani Aboudeshisha              Hani.usa.nyc@gmail.com\r\nGrigoriy Zhenien\t           gregoery.zhenin@gmail.com \r\nDaniel Fialkouvsky             dafialkov@hunter.cuny.edu\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}